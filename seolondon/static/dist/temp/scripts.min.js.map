{"version":3,"sources":["scripts.min.js","main.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","$","document","ready","unslider","animation","accordion","selector","trigger","tab","click","storyId","this","data","modal","dropdown","css","e","location","pathname","replace","hostname","hash","slice","animate","scrollTop","offset","top","preventDefault","Header","navbarId","headerId","$navbar","$header","$mobileToggle","find","$mobileMenu","children","$window","window","scrolling","lastScrollPosition","menuLastToggled","Date","bind","scroll","addClass","value","_this","resize","hasClass","width","closeMobileMenu","toggleMobileMenu","$link","closest","$menu","not","slideUp","removeClass","slideDown","now","getTime","openMobileMenu","_this2","setTimeout","fadeIn","_this3","fadeOut"],"mappings":"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","file":"scripts.min.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n$(document).ready(function ($) {\n  $('.slider').unslider({\n    animation: 'horizontal'\n  });\n\n  $('.ui.accordion').accordion({\n    selector: {\n      trigger: '.title'\n    }\n  });\n\n  $('.menu .item').tab();\n\n  $('.success.story.button').click(function () {\n    var storyId = $(this).data('story');\n    $('.success.story.modal.' + storyId).modal('show');\n  });\n\n  $('.apply-button').click(function () {\n    $('.apply.modal').modal('show');\n  });\n\n  // open second modal on first modal buttons\n  $('.donate.modal').modal('attach events', '.donate-modal.button');\n\n  $('.ui.dropdown').dropdown();\n\n  $('li li.child:contains(\"FAQ\")').css(\"border-top\", \"3px solid #105f9b\");\n\n  $('a[href*=\"#\"]:not([href=\"#\"])').click(function (e) {\n    if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') && location.hostname == this.hostname) {\n      var target = $(this.hash);\n      target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n\n      if (target.length) {\n        $('html, body').animate({\n          scrollTop: target.offset().top - 50\n        }, 500);\n\n        e.preventDefault();\n      }\n    }\n  });\n});\n\n/**\n * JavaScript for the header and navigation\n * @class Header\n */\n\nvar Header = function () {\n  function Header(navbarId, headerId) {\n    _classCallCheck(this, Header);\n\n    this.$navbar = $(navbarId);\n    this.$header = $(headerId);\n    this.$mobileToggle = this.$navbar.find('.mobile.toggle a');\n    this.$mobileMenu = this.$navbar.children('.ui.mobile.container');\n    this.$window = $(window);\n    this.scrolling = false;\n    this.lastScrollPosition = 9999999;\n    this.menuLastToggled = new Date(0);\n\n    this.bind();\n    this.scroll();\n\n    if (this.$window.scrollTop() >= 200) {\n      this.$navbar.addClass('slide-down');\n    }\n  }\n\n  /**\n   * Bind the header to scroll and toggle events\n   */\n\n\n  _createClass(Header, [{\n    key: 'bind',\n    value: function bind() {\n      var _this = this;\n\n      this.$window.scroll(this.scroll.bind(this));\n\n      this.$window.resize(function () {\n        if (_this.$navbar.hasClass('mobile open') && _this.$window.width() >= 768) {\n          _this.closeMobileMenu();\n        }\n      });\n\n      this.$mobileToggle.click(this.toggleMobileMenu.bind(this));\n\n      this.$mobileMenu.find('.menu-item-has-children').click(function (e) {\n        var $link = $(e.target).closest('.menu-item-has-children');\n        var $menu = $link.children('ul');\n\n        if (!$menu.hasClass('open')) {\n          _this.$mobileMenu.find('.menu-item-has-children ul').not($menu).slideUp(300).removeClass('open');\n          $menu.slideDown(300).addClass('open');\n          e.preventDefault();\n        }\n      });\n    }\n\n    /**\n     * Handle the window scroll event\n     */\n\n  }, {\n    key: 'scroll',\n    value: function scroll() {}\n    // let scrollPosition = this.$window.scrollTop();\n    //\n    // if (scrollPosition > 100) {\n    //   if (this.lastScrollPosition === scrollPosition) {\n    //     return;\n    //   }\n    //\n    //   if (!this.scrolling) {\n    //     this.scrolling = true;\n    //     this.$navbar.addClass('scrolling');\n    //   } else if (this.lastScrollPosition < scrollPosition || scrollPosition < 200) {\n    //     this.$navbar.addClass('slide-up').removeClass('slide-down');\n    //   } else {\n    //     this.$navbar.removeClass('slide-up').addClass('slide-down');\n    //   }\n    // } else {\n    //   if (this.scrolling) {\n    //     this.scrolling = false;\n    //\n    //     // prevent animations from occurring\n    //     this.$navbar\n    //       .removeClass('scrolling')\n    //       .removeClass('slide-up')\n    //       .removeClass('slide-down');\n    //   }\n    // }\n    //\n    // this.lastScrollPosition = scrollPosition;\n\n\n    /**\n     * Show/hide the mobile menu\n     */\n\n  }, {\n    key: 'toggleMobileMenu',\n    value: function toggleMobileMenu() {\n      var now = new Date();\n\n      // debouncing\n      if (now.getTime() - 700 < this.menuLastToggled.getTime()) {\n        return false;\n      } else {\n        this.menuLastToggled = new Date();\n      }\n\n      // toggling\n      if (this.$navbar.hasClass('mobile open')) {\n        this.closeMobileMenu();\n      } else {\n        this.openMobileMenu();\n      }\n    }\n\n    /**\n     * Open the mobile menu and handle animations\n     */\n\n  }, {\n    key: 'openMobileMenu',\n    value: function openMobileMenu() {\n      var _this2 = this;\n\n      $('.mobile.slice').addClass('active');\n      this.$navbar.addClass('mobile open');\n      $('body').addClass('mobile open');\n\n      setTimeout(function () {\n        _this2.$navbar.find('.ui.mobile.container').fadeIn(350);\n      }, 300);\n    }\n\n    /**\n     * Close the mobile menu, handling animations\n     */\n\n  }, {\n    key: 'closeMobileMenu',\n    value: function closeMobileMenu() {\n      var _this3 = this;\n\n      this.$mobileMenu.find('.menu-item-has-children ul').slideUp(300).removeClass('open');\n      this.$navbar.find('.ui.mobile.container').fadeOut(300);\n      $('body').removeClass('mobile open');\n\n      setTimeout(function () {\n        _this3.$navbar.removeClass('mobile open');\n        $('.mobile.slice').removeClass('active');\n        _this3.scroll();\n      }, 300);\n    }\n  }]);\n\n  return Header;\n}();\n\n$(document).ready(function () {\n  return new Header('#navigation-bar', '#masthead');\n});","$(document).ready(function ($) {\n  $('.slider').unslider({\n    animation: 'horizontal'\n  });\n\n  $('.ui.accordion')\n    .accordion({\n      selector: {\n        trigger: '.title'\n      }\n    });\n\n  $('.menu .item')\n    .tab()\n  ;\n\n  $('.success.story.button').click(function() {\n    var storyId = $(this).data('story');\n    $('.success.story.modal.'+storyId).modal('show');\n  });\n\n  $('.apply-button').click(function() {\n    $('.apply.modal').modal('show');\n  });\n\n  // open second modal on first modal buttons\n  $('.donate.modal')\n    .modal('attach events', '.donate-modal.button');\n\n  $('.ui.dropdown').dropdown();\n\n  $('li li.child:contains(\"FAQ\")').css(\"border-top\", \"3px solid #105f9b\");\n\n  $('a[href*=\"#\"]:not([href=\"#\"])').click(function (e) {\n    if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') && location.hostname == this.hostname) {\n      var target = $(this.hash);\n      target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n\n      if (target.length) {\n        $('html, body').animate({\n          scrollTop: target.offset().top - 50\n        }, 500);\n\n        e.preventDefault();\n      }\n    }\n  });\n});\n\n/**\n * JavaScript for the header and navigation\n * @class Header\n */\nclass Header {\n  constructor(navbarId, headerId) {\n    this.$navbar = $(navbarId);\n    this.$header = $(headerId);\n    this.$mobileToggle = this.$navbar.find('.mobile.toggle a');\n    this.$mobileMenu = this.$navbar.children('.ui.mobile.container');\n    this.$window = $(window);\n    this.scrolling = false;\n    this.lastScrollPosition = 9999999;\n    this.menuLastToggled = new Date(0);\n\n    this.bind();\n    this.scroll();\n\n    if (this.$window.scrollTop() >= 200) {\n      this.$navbar.addClass('slide-down');\n    }\n  }\n\n  /**\n   * Bind the header to scroll and toggle events\n   */\n  bind() {\n    this.$window.scroll(this.scroll.bind(this));\n\n    this.$window.resize(() => {\n      if (this.$navbar.hasClass('mobile open') && this.$window.width() >= 768) {\n        this.closeMobileMenu();\n      }\n    });\n\n    this.$mobileToggle.click(this.toggleMobileMenu.bind(this));\n\n    this.$mobileMenu.find('.menu-item-has-children').click((e) => {\n      const $link = $(e.target).closest('.menu-item-has-children');\n      const $menu = $link.children('ul');\n\n      if (!$menu.hasClass('open')) {\n        this.$mobileMenu.find('.menu-item-has-children ul').not($menu).slideUp(300).removeClass('open');\n        $menu.slideDown(300).addClass('open');\n        e.preventDefault();\n      }\n    });\n  }\n\n  /**\n   * Handle the window scroll event\n   */\n  scroll() {\n    // let scrollPosition = this.$window.scrollTop();\n    //\n    // if (scrollPosition > 100) {\n    //   if (this.lastScrollPosition === scrollPosition) {\n    //     return;\n    //   }\n    //\n    //   if (!this.scrolling) {\n    //     this.scrolling = true;\n    //     this.$navbar.addClass('scrolling');\n    //   } else if (this.lastScrollPosition < scrollPosition || scrollPosition < 200) {\n    //     this.$navbar.addClass('slide-up').removeClass('slide-down');\n    //   } else {\n    //     this.$navbar.removeClass('slide-up').addClass('slide-down');\n    //   }\n    // } else {\n    //   if (this.scrolling) {\n    //     this.scrolling = false;\n    //\n    //     // prevent animations from occurring\n    //     this.$navbar\n    //       .removeClass('scrolling')\n    //       .removeClass('slide-up')\n    //       .removeClass('slide-down');\n    //   }\n    // }\n    //\n    // this.lastScrollPosition = scrollPosition;\n  }\n\n  /**\n   * Show/hide the mobile menu\n   */\n  toggleMobileMenu() {\n    const now = new Date();\n\n    // debouncing\n    if (now.getTime() - 700 < this.menuLastToggled.getTime()) {\n      return false;\n    } else {\n      this.menuLastToggled = new Date();\n    }\n\n    // toggling\n    if (this.$navbar.hasClass('mobile open')) {\n      this.closeMobileMenu();\n    } else {\n      this.openMobileMenu();\n    }\n  }\n\n  /**\n   * Open the mobile menu and handle animations\n   */\n  openMobileMenu() {\n    $('.mobile.slice').addClass('active');\n    this.$navbar.addClass('mobile open');\n    $('body').addClass('mobile open');\n\n    setTimeout(() => {\n      this.$navbar.find('.ui.mobile.container').fadeIn(350);\n    }, 300);\n  }\n\n  /**\n   * Close the mobile menu, handling animations\n   */\n  closeMobileMenu() {\n    this.$mobileMenu.find('.menu-item-has-children ul').slideUp(300).removeClass('open');\n    this.$navbar.find('.ui.mobile.container').fadeOut(300);\n    $('body').removeClass('mobile open');\n\n    setTimeout(() => {\n      this.$navbar.removeClass('mobile open');\n      $('.mobile.slice').removeClass('active');\n      this.scroll();\n    }, 300);\n  }\n}\n\n$(document).ready(() => new Header('#navigation-bar', '#masthead'));\n"],"sourceRoot":"/source/"}